//Carrega a biblioteca do sensor ultrassonico
#include <Ultrasonic.h>
 
//Define os pinos para o trigger e echo
#define pino_trigger 7   
#define pino_echo 5
//Inicializa o sensor nos pinos definidos acima
Ultrasonic ultrasonic(pino_trigger, pino_echo);

#include <Adafruit_NeoPixel.h>
#include "WS2812_Definitions.h"

#define PIN 13// Pino de controle
#define LED_COUNT 60// Quantidade de LED's
unsigned long fita=0x000000;// recebe valores em hexa referente as cores
unsigned long pri=0x000033;
unsigned long seg=0x003201;
unsigned long ter=0x320001;
//Cria uma instância da Classe Adafruit NeoPixel chamado "leds"
Adafruit_NeoPixel leds = Adafruit_NeoPixel(LED_COUNT, PIN, NEO_GRB + NEO_KHZ800);


// codigo para sensor ky 038- microfine
int microfone = 7; // Pino digital ligado ao sensor de som (DO)
int led = 8; // Pino ligado ao LED
 
int contPalmas = 0; // Contador de Palmas
int palmasRequeridaLigaLed = 2; // Contagem para acender o LED
int palmasRequeridaDesligaLed = 2; // Contagem para apagar o LED
 
// Tempo máximo entre o pulso seguinte
unsigned long tempMaxSom = 1000; 
unsigned  long tempMinSom = 300;  
unsigned long compriSonoro = 100; // Comprimento do som esperado
unsigned long time;
unsigned long startTime = 0;
/// fim de definicao de variaveis para ky 038

void setup()
{
  Serial.begin(9600); 
  leds.begin(); // Inicia a fita de LED
  clearLEDs();   // Apaga todos os LEDs
  leds.show(); // Atualiza o estados dos LEDs
  Serial.println("Lendo dados do sensor...");

   pinMode(microfone, INPUT); // Inicia o pino do microfone como entrada
   pinMode(led, OUTPUT); // Inicia os pino do LED como saída
  // Desliga LED (o LED é invertido HIGH = desliga / LOW = liga)
  digitalWrite(led, HIGH); 
}


void loop()
{
   float cmMsec, inMsec;
  long microsec = ultrasonic.timing();
  cmMsec = ultrasonic.convert(microsec, Ultrasonic::CM);
  inMsec = ultrasonic.convert(microsec, Ultrasonic::IN);

  // Inicia a contagem de tempo------MICROFONE
 time = millis();
 // Verifica o tempo entre o pulso inicial e o seguinte
 unsigned long tempoAposPalma = time - startTime;
// fim MICROFONE
 
  
  //Exibe informacoes no serial monitor leituras do ultrasonico
  Serial.print("Distancia em cm: ");
  Serial.print(cmMsec);
  Serial.print(" - Distancia em polegadas: ");
  Serial.println(inMsec);
  delay(5);
  // fim de print em monitor leituras ultrasonico
  int a=0;
  
 if(cmMsec>=100.00)
   a=1;
 else
   a=2;
    int l=0;//conta a posição dos LEDs
  int DD=50;//Variavel de envio do valor do delay
  switch(a){// se a pessoa se aproxima 8cm do sensor 
  

   case 1:
   Serial.println(cmMsec);
   for(int k=0; k<6;k++)//1º laço
  {
    for(int j=0;j<6;j++)//2º laço
    {
      for(int i=0;i<5;i++)//3º laço
      {
        if( l>= LED_COUNT) l=0;//Verifica se ultrapassou o limite da fita
        fita=fita+pri;//Coforme a tabela inseri o valor na constante e incrementa
        ligaLED(l,DD);//Envia a posição na fita e envia o tempo ligado
        //apagaLED(l,DD);//Envia a posição na fita e envia o tempo desligad//// Tirar comentario caso queira utilizar um unico LED
         l++;//Incrementa posição na fita
      }
       if(j<5)//Compara se não ultrapassou o limite pois foram feitas duas somas seguidas e uma tera que ser ignorada
         {
          if(l>= LED_COUNT)l=0;
           fita=fita+seg;
           ligaLED(l,DD);
          // apagaLED(l,DD);// Tirar comentario caso queira utilizar um unico LED
           l++;//Incrementa posição na fita
           }
 
      }
       if(k<5)//Compara se não ultrapassou o limite pois foram feitas duas somas seguidas e uma tera que ser ignorada
         {
          if(l>= LED_COUNT)l=0;
             fita=fita+ter;
             ligaLED(l,DD);
             //apagaLED(l,DD);// Tirar comentario caso queira utilizar um unico LED
             l++;//Incrementa posição na fita
          }
     }  
     break;
case 2: // se a pessoa se aproxima 8cm do sensor 
 // int l=0;//conta a posição dos LEDs
 // int DD=50;//Variavel de envio do valor do delay
  Serial.println(cmMsec);
  for(int k=0; k<6;k++)//1º laço
  {
    for(int j=0;j<6;j++)//2º laço
    {
      for(int i=0;i<5;i++)//3º laço
      {
        if( l>= LED_COUNT) l=0;//Verifica se ultrapassou o limite da fita
        fita=fita+pri;//Coforme a tabela inseri o valor na constante e incrementa
        ligaLED(l,DD);//Envia a posição na fita e envia o tempo ligado
        apagaLED(l,DD);//Envia a posição na fita e envia o tempo desligad//// Tirar comentario caso queira utilizar um unico LED
         l++;//Incrementa posição na fita
      }
       if(j<5)//Compara se não ultrapassou o limite pois foram feitas duas somas seguidas e uma tera que ser ignorada
         {
          if(l>= LED_COUNT)l=0;
           fita=fita+seg;
           ligaLED(l,DD);
           apagaLED(l,DD);// Tirar comentario caso queira utilizar um unico LED
           l++;//Incrementa posição na fita
           }

      }
       if(k<5)//Compara se não ultrapassou o limite pois foram feitas duas somas seguidas e uma tera que ser ignorada
         {
          if(l>= LED_COUNT)l=0;
             fita=fita+ter;
             ligaLED(l,DD);
             apagaLED(l,DD);// Tirar comentario caso queira utilizar um unico LED
             l++;//Incrementa posição na fita
          }
     }  
     break;

  }// if da comparacao do sensor ULTRASONICO

 
  //--------------------------------------------------------------------------------------------------------
// inicio usando sensor 
 
 

       
  // if da comparacao do sensor ULTRASONICO

}// fim loop
 

//Função liga led individual
void ligaLED(int g, int d)//Recebe a posição e tempo de Delay
{
delay(d); //Seta o tempo

leds.setPixelColor(g, fita);//Aciona o LED requerido
 leds.show();//Atualiza o LED
}



//Função apaga LED individual
void apagaLED(int g, int d)//Recebe a posição e tempo de Delay
{
delay(d); //Seta o tempo
leds.setPixelColor(g, 0);//Desaciona o LED requerido
 leds.show();//Atualiza o LED
}

//Função apaga LEDs geral
void clearLEDs()
{  for (int p=0; p<LED_COUNT; p++)
  {
    leds.setPixelColor(p, 0);
    leds.show();
  }
}
